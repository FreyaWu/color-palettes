[{"/Users/nanjiang/code/Web/color-palettes/client/src/index.js":"1","/Users/nanjiang/code/Web/color-palettes/client/src/App.js":"2","/Users/nanjiang/code/Web/color-palettes/client/src/reportWebVitals.js":"3","/Users/nanjiang/code/Web/color-palettes/client/src/store.js":"4","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Login.js":"5","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Build.js":"6","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Show.js":"7","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Home.js":"8","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Register.js":"9","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Edit.js":"10","/Users/nanjiang/code/Web/color-palettes/client/src/Actions/auth.js":"11","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Profile.js":"12","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/PaletteGallery.js":"13","/Users/nanjiang/code/Web/color-palettes/client/src/Reducers/index.js":"14","/Users/nanjiang/code/Web/color-palettes/client/src/Actions/message.js":"15","/Users/nanjiang/code/Web/color-palettes/client/src/Reducers/auth.js":"16","/Users/nanjiang/code/Web/color-palettes/client/src/Services/palette.js":"17","/Users/nanjiang/code/Web/color-palettes/client/src/Services/artwork.js":"18","/Users/nanjiang/code/Web/color-palettes/client/src/Services/like.js":"19","/Users/nanjiang/code/Web/color-palettes/client/src/Services/auth.js":"20","/Users/nanjiang/code/Web/color-palettes/client/src/Services/user.js":"21","/Users/nanjiang/code/Web/color-palettes/client/src/Actions/types.js":"22","/Users/nanjiang/code/Web/color-palettes/client/src/Components/MessageAlert.jsx":"23","/Users/nanjiang/code/Web/color-palettes/client/src/Components/ColorCard.jsx":"24","/Users/nanjiang/code/Web/color-palettes/client/src/Components/ArtworkCard.jsx":"25","/Users/nanjiang/code/Web/color-palettes/client/src/Components/PaletteCard.jsx":"26","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Cover.jsx":"27","/Users/nanjiang/code/Web/color-palettes/client/src/Reducers/message.js":"28","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Footer.jsx":"29","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Header.jsx":"30","/Users/nanjiang/code/Web/color-palettes/client/src/Components/LikeButton.jsx":"31","/Users/nanjiang/code/Web/color-palettes/client/src/Components/ColorCode.jsx":"32","/Users/nanjiang/code/Web/color-palettes/client/src/utils/color.js":"33","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/ArtworkGallery.js":"34","/Users/nanjiang/code/Web/color-palettes/client/src/Components/color-picker/ColorPicker.jsx":"35","/Users/nanjiang/code/Web/color-palettes/client/src/Components/color-picker/ColorPointer.jsx":"36","/Users/nanjiang/code/Web/color-palettes/client/src/Components/color-picker/ColorPickerFields.jsx":"37","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Color-picker/ColorPicker.jsx":"38","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Color-picker/ColorPickerFields.jsx":"39","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Color-picker/ColorPointer.jsx":"40","/Users/nanjiang/code/Web/color-palettes/client/src/Hocs/withHeaderFooter.js":"41","/Users/nanjiang/code/Web/color-palettes/client/src/device.js":"42"},{"size":664,"mtime":1619815846517,"results":"43","hashOfConfig":"44"},{"size":1728,"mtime":1619904254510,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1619815846518,"results":"46","hashOfConfig":"44"},{"size":344,"mtime":1619815846518,"results":"47","hashOfConfig":"44"},{"size":4851,"mtime":1619905294050,"results":"48","hashOfConfig":"44"},{"size":7232,"mtime":1619958677437,"results":"49","hashOfConfig":"44"},{"size":5229,"mtime":1619958955309,"results":"50","hashOfConfig":"44"},{"size":2035,"mtime":1619904057117,"results":"51","hashOfConfig":"44"},{"size":5258,"mtime":1619905383050,"results":"52","hashOfConfig":"44"},{"size":6970,"mtime":1619959137187,"results":"53","hashOfConfig":"44"},{"size":2032,"mtime":1619815846508,"results":"54","hashOfConfig":"44"},{"size":4167,"mtime":1619959066787,"results":"55","hashOfConfig":"44"},{"size":1264,"mtime":1619904487166,"results":"56","hashOfConfig":"44"},{"size":192,"mtime":1619815846514,"results":"57","hashOfConfig":"44"},{"size":240,"mtime":1619815846509,"results":"58","hashOfConfig":"44"},{"size":899,"mtime":1619815846514,"results":"59","hashOfConfig":"44"},{"size":1052,"mtime":1619815846516,"results":"60","hashOfConfig":"44"},{"size":264,"mtime":1619815846515,"results":"61","hashOfConfig":"44"},{"size":483,"mtime":1619815846515,"results":"62","hashOfConfig":"44"},{"size":562,"mtime":1619815846515,"results":"63","hashOfConfig":"44"},{"size":274,"mtime":1619815846516,"results":"64","hashOfConfig":"44"},{"size":440,"mtime":1619815846509,"results":"65","hashOfConfig":"44"},{"size":932,"mtime":1619815846512,"results":"66","hashOfConfig":"44"},{"size":1467,"mtime":1619815846510,"results":"67","hashOfConfig":"44"},{"size":2728,"mtime":1619902889405,"results":"68","hashOfConfig":"44"},{"size":3536,"mtime":1619900300491,"results":"69","hashOfConfig":"44"},{"size":822,"mtime":1619815846511,"results":"70","hashOfConfig":"44"},{"size":485,"mtime":1619815846515,"results":"71","hashOfConfig":"44"},{"size":428,"mtime":1619903354096,"results":"72","hashOfConfig":"44"},{"size":2565,"mtime":1619958059390,"results":"73","hashOfConfig":"44"},{"size":247,"mtime":1619815846511,"results":"74","hashOfConfig":"44"},{"size":1219,"mtime":1619815846510,"results":"75","hashOfConfig":"44"},{"size":661,"mtime":1619815846519,"results":"76","hashOfConfig":"44"},{"size":1338,"mtime":1619904468056,"results":"77","hashOfConfig":"44"},{"size":2438,"mtime":1619900971789,"results":"78","hashOfConfig":"44"},{"size":417,"mtime":1619900882269,"results":"79","hashOfConfig":"44"},{"size":3606,"mtime":1619815846510,"results":"80","hashOfConfig":"44"},{"size":2543,"mtime":1619946661468,"results":"81","hashOfConfig":"44"},{"size":3510,"mtime":1619905492309,"results":"82","hashOfConfig":"44"},{"size":417,"mtime":1619908803983,"results":"83","hashOfConfig":"44"},{"size":362,"mtime":1619903226728,"results":"84","hashOfConfig":"44"},{"size":555,"mtime":1619958348761,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"1m48db0",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"88"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nanjiang/code/Web/color-palettes/client/src/index.js",[],["187","188"],"/Users/nanjiang/code/Web/color-palettes/client/src/App.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/reportWebVitals.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/store.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Login.js",["189","190"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { login } from '../Actions/auth';\nimport { selectAuth } from '../Reducers/auth';\nimport { setMessage } from '../Actions/message'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport MessageAlert from '../Components/MessageAlert';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\nconst FormContainer = styled(Form)`\n    background:#f7f7f7;\n`;\n\nfunction LoginPage() {\n    const { user } = useSelector(selectAuth);\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const schema = Yup.object().shape({\n        username: Yup.string()\n            .required()\n            .min(2)\n            .max(25),\n        password: Yup.string()\n            .required()\n    })\n\n    const handleSubmit = (input) => {\n        dispatch(login(input));\n    }\n\n    useEffect(() => {\n        if (user.username) {\n            dispatch(setMessage(\"info\", `Welcome back, ${user.username}`))\n            if (location.state && location.state.from &&\n                (location.state.from !== \"/login\" && location.state.from !== \"/register\")) {\n                history.push(location.state.from);\n            } else {\n                history.push('/palettes');\n            }\n        }\n    }, [user]);//only run useEffect when user updates. empty[] / no [], run after every render\n\n    return (\n        <Container fluid>\n            <MessageAlert />\n            <div className=\"text-center py-3\">\n                <h3>Sign in to Color Palette</h3>\n            </div>\n            <Row className=\"justify-content-center mt-2 mt-md-3\">\n                <Col className=\"col-12 col-md-6 mt-2 mt-sm-5 px-0\">\n                    <Formik\n                        validationSchema={schema}\n                        onSubmit={(values) => { handleSubmit(values) }}\n                        initialValues={{\n                            username: '',\n                            password: '',\n                        }}\n                    >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            values,\n                            errors,\n                        }) => (\n                            <FormContainer onSubmit={handleSubmit} className=\"d-flex p-5\">\n                                <div className=\"w-100\">\n                                    <Form.Group controlId=\"username\">\n                                        <Form.Label>Username</Form.Label>\n                                        <Form.Control\n                                            name=\"username\"\n                                            type=\"string\"\n                                            value={values.username}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.username}\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.username}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"password\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.password}\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.password}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Button variant=\"dark\" type=\"submit\" block>\n                                        Sign in\n                                    </Button>\n                                </div>\n                            </FormContainer>\n                        )}\n                    </Formik>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\n\nexport default withHeaderFooter(LoginPage);\n","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Build.js",["191","192"],"/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Show.js",["193"],"/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Home.js",["194","195"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport MessageAlert from '../Components/MessageAlert';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\nconst Column = styled(Col)`\n    background-color: ${props => props.color};\n`;\n\nfunction HomePage() {\n    return (\n        <>\n            <MessageAlert />\n            <Container fluid className=\"d-flex flex-grow-1\">\n                <Row className=\"flex-grow-1\">\n                    <Column color={\"#F299E3\"} className=\"d-flex col-12 col-md-4\">\n                        <div className=\"align-self-center mx-auto text-center\">\n                            <h1>Palette</h1>\n                            <p>There are a lot of colors.</p>\n                            <Button variant=\"outline-dark\" href=\"/palettes\">Check out colors</Button>\n                        </div>\n                    </Column>\n                    <Column color={\"#29F2F2\"} className=\"d-flex col-12 col-md-4\">\n                        <div className=\"align-self-center mx-auto text-center\">\n                            <h1>Build</h1>\n                            <p>Build your own colors.</p>\n                            <Button variant=\"outline-dark\" href=\"/build\">Get started</Button>\n                        </div>\n                    </Column>\n                    <Column color={\"#D7F29B\"} className=\"d-flex col-12 col-md-4\">\n                        <div className=\"align-self-center mx-auto text-center\">\n                            <h1>Gallery</h1>\n                            <p>There are a lot of samples.</p>\n                            <Button variant=\"outline-dark\" href=\"/gallery\">Check out samples</Button>\n                        </div>\n                    </Column>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default withHeaderFooter(HomePage);","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Register.js",["196","197","198"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { register } from '../Actions/auth';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { setMessage } from '../Actions/message';\nimport MessageAlert from '../Components/MessageAlert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\nconst FormContainer = styled(Form)`\n    background:#f7f7f7;\n`;\n\nfunction RegisterPage() {\n    const { user } = useSelector(selectAuth);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const schema = Yup.object().shape({\n        username: Yup.string()\n            .required()\n            .min(2)\n            .max(25),\n        email: Yup.string()\n            .required()\n            .email(),\n        password: Yup.string()\n            .required()\n            .min(4)\n            .max(20),\n    })\n\n    const handleSubmit = (input) => {\n        dispatch(register(input));\n    }\n\n    useEffect(() => {\n        if (user.username) {\n            dispatch(setMessage(\"info\", `Welcome, ${user.username}`))\n            console.log(user.username);\n            history.replace('/palettes');\n        }\n    }, [user])\n\n    return (\n        <Container fluid>\n            <Row className=\"justify-content-center mt-2 mt-sm-5\">\n                <Col className=\"col-12 col-md-6 mt-2 mt-sm-5 px-0\">\n                    <div className=\"text-center py-3\">\n                        <h2>Sign up to Color Palette</h2>\n                    </div>\n                    <Formik\n                        validationSchema={schema}\n                        onSubmit={(values) => { handleSubmit(values) }}\n                        initialValues={{\n                            username: '',\n                            email: '',\n                            password: '',\n                        }}\n                    >\n                        {({ handleSubmit, handleChange, values, errors }) => (\n                            <FormContainer className=\"p-5\" noValidate onSubmit={handleSubmit} >\n                                <MessageAlert />\n                                <div className=\"w-100\">\n                                    <Form.Group controlId=\"username\">\n                                        <Form.Label>Username</Form.Label>\n                                        <Form.Control\n                                            name=\"username\"\n                                            type=\"string\"\n                                            value={values.username}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.username} />\n                                        <Form.Control.Feedback>\n                                            {errors.username}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"email\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control\n                                            name=\"email\"\n                                            type=\"email\"\n                                            value={values.email}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.email} />\n                                        <Form.Control.Feedback>\n                                            {errors.email}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"password\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.password} />\n                                        <Form.Control.Feedback>\n                                            {errors.password}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Button variant=\"dark\" type=\"submit\" block>\n                                        Register\n                                    </Button>\n                                </div>\n                            </FormContainer>\n                        )}\n                    </Formik>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default withHeaderFooter(RegisterPage);","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Edit.js",["199","200","201","202"],"/Users/nanjiang/code/Web/color-palettes/client/src/Actions/auth.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Pages/Profile.js",["203","204","205","206","207"],"/Users/nanjiang/code/Web/color-palettes/client/src/Pages/PaletteGallery.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Reducers/index.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Actions/message.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Reducers/auth.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Services/palette.js",["208"],"import axios from 'axios';\n\nconst API_URL = '/api/palettes/';\n\nconst getAllPalettes = () => {\n    return axios.get(API_URL);\n}\n\nconst getPalette = (paletteId) => {\n    return axios.get(API_URL + paletteId);\n}\n\nconst getPaletteViews = (paletteId) => {\n    return axios.get(API_URL + paletteId + '/views');\n}\n\nconst updatePaletteViews = (paletteId, views) => {\n    return axios.patch(API_URL + paletteId + '/views', {\n        views: views,\n    });\n}\n\nconst savePalette = (colors, image) => {\n    const views = 0;\n    return axios.post(API_URL, {\n        colors: colors,\n        image: image,\n        views: views\n    });\n}\n\nconst editPalette = (paletteId, colors, image, size) => {\n    return axios.patch(API_URL + paletteId + '/edit', {\n        colors: colors,\n        image: image,\n        size: size\n    });\n}\n\nconst deletePalette = (paletteId) => {\n    return axios.delete(API_URL + paletteId);\n}\n\nexport default {\n    getAllPalettes,\n    getPalette,\n    getPaletteViews,\n    updatePaletteViews,\n    savePalette,\n    editPalette,\n    deletePalette\n};","/Users/nanjiang/code/Web/color-palettes/client/src/Services/artwork.js",["209"],"import axios from 'axios';\n\nconst API_URL = '/api/artworks/';\n\nconst getAllArtworks = () => {\n    return axios.get(API_URL);\n}\n\nconst getPalette = (paletteId) => {\n    return axios.get(API_URL + paletteId);\n}\n\nexport default {\n    getAllArtworks,\n    getPalette\n};","/Users/nanjiang/code/Web/color-palettes/client/src/Services/like.js",["210"],"import axios from 'axios';\n\nconst API_URL = '/api/like/';\n\nconst getLikes = (paletteId) => {\n    return axios.get(API_URL + paletteId + '/count');\n};\n\nconst doesLikeExist = (paletteId) => {\n    return axios.get(API_URL + paletteId);\n};\n\nconst postLike = (paletteId) => {\n    return axios.post(API_URL + paletteId);\n}\n\nconst deleteLike = (paletteId) => {\n    return axios.delete(API_URL + paletteId);\n}\n\nexport default {\n    getLikes,\n    doesLikeExist,\n    postLike,\n    deleteLike\n}","/Users/nanjiang/code/Web/color-palettes/client/src/Services/auth.js",["211"],"import axios from 'axios';\n\nconst API_URL = \"/api/auth/\";\n\nconst register = (username, email, password) => {\n    return axios.post(API_URL + \"register\", {\n        username,\n        email,\n        password,\n    });\n};\n\nconst login = (username, password) => {\n    return axios.post(API_URL + \"login\", {\n        username,\n        password,\n    });\n};\n\nconst fetchUser = () => {\n    return axios.get(API_URL + \"profile\");\n};\n\nconst logout = () => {\n    return axios.get(API_URL + \"logout\");\n};\n\nexport default {\n    register,\n    login,\n    fetchUser,\n    logout,\n};","/Users/nanjiang/code/Web/color-palettes/client/src/Services/user.js",["212"],"import axios from 'axios';\nconst API_URL = '/api/user/';\n\nconst getUserPalettes = () => {\n    return axios.get(API_URL + 'palettes');\n}\n\nconst getLikedPalettes = () => {\n    return axios.get(API_URL + 'liked');\n}\n\nexport default {\n    getUserPalettes,\n    getLikedPalettes\n}","/Users/nanjiang/code/Web/color-palettes/client/src/Actions/types.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/MessageAlert.jsx",["213"],"import React, { useEffect } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectMessage } from '../Reducers/message';\nimport { clearMessage } from '../Actions/message';\n\nfunction MessageAlert({ autoDismiss = true }) {\n    const { variant, message } = useSelector(selectMessage);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (autoDismiss) {\n            const timer = setTimeout(() => dispatch(clearMessage()), 4000);\n            return () => clearTimeout(timer);\n        }\n    }, [message]);\n\n    return (\n        <div>\n            { variant && \n                <Alert\n                    variant = {variant}\n                    onClose={() => { dispatch(clearMessage()) }}\n                    dismissible\n                >\n                    {message}\n                </Alert>}\n        </div>\n    )\n}\n\nexport default MessageAlert;","/Users/nanjiang/code/Web/color-palettes/client/src/Components/ColorCard.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/ArtworkCard.jsx",["214","215","216","217","218","219"],"import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport LikeButton from './LikeButton';\nimport { HeartFill } from \"react-bootstrap-icons\";\n\nimport ArtworkService from '../Services/artwork';\nimport LikeService from '../Services/like';\n\nconst CardImage = styled(Card.Img)`\n    height: 270px;\n    object-fit: cover;\n`;\n\nconst PaletteContainer = styled.div`\n    display: flex;\n`;\n\nconst ColorSpan = styled.span`\n    display: inline-block;\n    flex: 1;\n    width: calc(100% / ${props => props.colorSize});\n    height: 1.5em;\n    background-color: ${props => props.color};\n`;\n\n\nfunction ArtworkCard({ artwork }) {\n    const [likes, setLikes] = useState(0);\n    const colors = artwork.colors;\n    console.log(artwork);\n\n    const fetchLikes = async () => {\n        const { data: likes } = await LikeService.getLikes(artwork._id);\n        setLikes(likes);\n    }\n\n    useEffect(() => {\n        fetchLikes();\n    }, [artwork._id])\n\n    const addLike = async () => {\n        await LikeService.postLike(artwork._id);\n        fetchLikes();\n    };\n\n    return (\n        <Card className=\"border-0\">\n            <Link\n                key={artwork._id}\n                to={{\n                    pathname: `/palettes/${artwork._id}`\n                }}\n            >\n                <CardImage\n                    src={artwork.image}\n                />\n                {/* <CardImageContainer className=\"position-relative\">\n\n                    <CardOverlay >\n                        <Card.Subtitle className=\"mb-2 text-muted \">Card Subtitle</Card.Subtitle>\n                        <Card.Text>\n                            Some quick example text to build on the card title and make up the bulk of\n                            the card's content.\n                        </Card.Text>\n                    </CardOverlay>\n                </CardImageContainer> */}\n                <PaletteContainer>\n                    {colors.map(color => <ColorSpan key={color} color={color} colorSize={colors.length} />)}\n                </PaletteContainer>\n            </Link>\n            <Card.Footer className=\"d-flex border rounded-bottom bg-white\">\n                <h6 className=\"m-0 align-items-center\">by {artwork.author.username}</h6>\n                <div className=\"d-flex ml-auto align-items-center\">\n                    <HeartFill onClick={addLike} variant=\"transparent\" className=\"mr-1\" />\n                    <div className=\"\">{likes}</div>\n                </div>\n            </Card.Footer>\n        </Card>\n    )\n}\nexport default ArtworkCard;\n","/Users/nanjiang/code/Web/color-palettes/client/src/Components/PaletteCard.jsx",["220"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';//这个link是干什么用的？\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\nimport Card from 'react-bootstrap/Card';\nimport { Heart, HeartFill, EyeFill } from \"react-bootstrap-icons\";\nimport styled from 'styled-components';\nimport LikeService from '../Services/like';\nimport PaletteService from '../Services/palette';\n\nconst ColorSpan = styled.div`\n    flex: 1;\n    width: calc(100% / ${props => props.colorSize});\n    height: 4em;\n    background-color: ${props => props.color};\n    border-top-left-radius: ${props => props.index === 0 && '0.2rem'};\n    border-top-right-radius: ${props => props.index === props.colorSize - 1 && '0.2rem'};\n`;\n\nfunction PaletteCard({ _id, colors, size, author }) {\n    const { user } = useSelector(selectAuth);\n    const [isLiked, setIsLiked] = useState(false);\n    const [numLikes, setNumLikes] = useState(0);\n    const [views, setViews] = useState(0);\n\n    const fetchViews = async () => {\n        const { data: views } = await PaletteService.getPaletteViews(_id);\n        setViews(views);\n    }\n\n    const fetchNumLikes = async () => {\n        try {\n            const { data: likes } = await LikeService.getLikes(_id);\n            setNumLikes(likes);\n        } catch (e) {\n            throw Error(e);\n        }\n    }\n\n    const fetchIsLiked = async () => {\n        if (!user) {\n            setIsLiked(false);\n            return;\n        }\n        try {\n            const { data: isLiked } = await LikeService.doesLikeExist(_id);\n            setIsLiked(isLiked);\n        } catch (e) {\n            // throw Error(e);\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        fetchIsLiked();\n        fetchNumLikes();\n        fetchViews();\n    }, [_id, user]);\n\n    const handleClickLike = async () => {\n        if (!user.username) return;\n        try {\n            if (isLiked) {\n                await LikeService.deleteLike(_id);\n            } else {\n                await LikeService.postLike(_id);\n            }\n            fetchIsLiked();\n            fetchNumLikes();\n        } catch (e) {\n            throw Error(e);\n        }\n    };\n\n    return (\n        <Card className=\"border-0\">\n            <Link\n                key={_id}\n                to={{\n                    pathname: `/palettes/${_id}`\n                }}\n            >\n                <div className=\"d-flex rounded-top\">\n                    {colors.map((color, index) => (\n                        <ColorSpan key={index} colorSize={size} color={color} index={index} />\n                    ))}\n                </div>\n            </Link>\n            <Card.Footer className=\"d-flex border rounded-bottom bg-white\">\n                <h6 className=\"m-0 align-items-center\">by {author.username}</h6>\n                <div className=\"d-flex ml-auto align-items-center\" style={{ cursor: 'pointer' }} onClick={handleClickLike}>\n                    {isLiked ?\n                        <HeartFill variant=\"transparent\" className=\"mr-1\" /> :\n                        <Heart variant=\"transparent\" className=\"mr-1\" />\n                    }\n                    <div className=\"\">{numLikes}</div>\n                </div>\n                <div className=\"d-flex ml-2 align-items-center\">\n                    <EyeFill variant=\"transparent\" className=\"mr-1\" />\n                    <div>{views}</div>\n                </div>\n            </Card.Footer>\n        </Card>\n    )\n}\n\nexport default PaletteCard;\n","/Users/nanjiang/code/Web/color-palettes/client/src/Components/Cover.jsx",["221","222"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst CoverContainer = styled.div `\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.9) 100%;\n    // background-image: -webkit-linear-gradient(top,\n    //         rgba(17, 16, 16, 1) 0%,\n    //         rgba(0, 0, 0, 0) 20%,\n    //         rgba(0, 0, 0, 0) 80%,\n    //         rgba(17, 16, 16, 1) 100%),\n    //     url(https://source.unsplash.com/collection/9248817);\n    background-image: url(https://source.unsplash.com/collection/9248817);\n\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n    // box-shadow: 0 0 0px 50px rgba(0, 0, 0, 0.9) 100%;\n`;\nfunction Cover() {\n    return (\n        <CoverContainer className=\"cover\"></CoverContainer>\n    )\n}\n\nexport default Cover;\n",["223","224"],"/Users/nanjiang/code/Web/color-palettes/client/src/Reducers/message.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/Footer.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/Header.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/LikeButton.jsx",["225","226","227"],"import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport axios from 'axios';\n\nexport default function LikeButton({ likes }) {\n\n    return (\n        <Button variant=\"danger\"> {likes}</Button>\n    );\n}","/Users/nanjiang/code/Web/color-palettes/client/src/Components/ColorCode.jsx",["228"],"import { React, useState } from 'react';\nimport styled from 'styled-components';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nfunction ColorCode({ content }) {\n    const [show, setShow] = useState(false);\n\n    const renderTooltip = (props) => (\n        <Tooltip id=\"tooltip\" {...props}>\n            Copied!\n        </Tooltip>\n    )\n\n    const renderNothing = (props) => (\n        <div />\n    )\n\n    const handleClickCode = (e) => {\n        setShow(true);\n        setTimeout(() => { setShow(false) }, 1000);\n        const el = document.createElement('textarea');\n        el.value = e.target.textContent;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n\n    return (\n        <OverlayTrigger\n            placement=\"top\"\n            style={{ backgroundColor: \"grey\" }}\n            delay={{ show: 250, hide: 400 }}\n            overlay={show ? renderTooltip : renderNothing}\n        >\n            <div style={{ cursor: \"pointer\" }} onClick={handleClickCode}>\n                {content}\n            </div>\n        </OverlayTrigger>\n\n    );\n}\n\nexport default ColorCode;","/Users/nanjiang/code/Web/color-palettes/client/src/utils/color.js",["229"],"import tinyColor from 'tinycolor2';\n\nconst isValidHex = (hex) => {\n    if (hex === 'transparent') {\n        return true\n    }\n    // disable hex4\n    const lh = (String(hex).charAt(0) === '#') ? 1 : 0\n    return hex.length !== (4 + lh) && tinyColor(hex).isValid();\n}\n\nconst randomRGBA = () => {\n    return {\n        r: Math.floor(Math.random() * 255),\n        g: Math.floor(Math.random() * 255),\n        b: Math.floor(Math.random() * 255),\n        a: 1,\n    }\n}\n\nconst toRgbString = rgb => {\n    rgb = rgb.a ? rgb : { ...rgb, a: 1 };\n    return `rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\n}\n\nexport default {\n    isValidHex,\n    randomRGBA,\n    toRgbString,\n};","/Users/nanjiang/code/Web/color-palettes/client/src/Pages/ArtworkGallery.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/color-picker/ColorPicker.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/color-picker/ColorPointer.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/color-picker/ColorPickerFields.jsx",["230"],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/Color-picker/ColorPicker.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/Color-picker/ColorPickerFields.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Components/Color-picker/ColorPointer.jsx",[],"/Users/nanjiang/code/Web/color-palettes/client/src/Hocs/withHeaderFooter.js",[],"/Users/nanjiang/code/Web/color-palettes/client/src/device.js",[],{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","replacedBy":"234"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"239","severity":1,"message":"240","line":52,"column":8,"nodeType":"241","endLine":52,"endColumn":14,"suggestions":"242"},{"ruleId":"235","severity":1,"message":"243","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":21},{"ruleId":"235","severity":1,"message":"244","line":14,"column":22,"nodeType":"237","messageId":"238","endLine":14,"endColumn":31},{"ruleId":"239","severity":1,"message":"245","line":88,"column":8,"nodeType":"241","endLine":88,"endColumn":19,"suggestions":"246"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"247","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"236","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"248","line":11,"column":22,"nodeType":"237","messageId":"238","endLine":11,"endColumn":30},{"ruleId":"239","severity":1,"message":"249","line":51,"column":8,"nodeType":"241","endLine":51,"endColumn":14,"suggestions":"250"},{"ruleId":"235","severity":1,"message":"251","line":3,"column":10,"nodeType":"237","messageId":"238","endLine":3,"endColumn":14},{"ruleId":"235","severity":1,"message":"243","line":3,"column":27,"nodeType":"237","messageId":"238","endLine":3,"endColumn":38},{"ruleId":"235","severity":1,"message":"252","line":58,"column":12,"nodeType":"237","messageId":"238","endLine":58,"endColumn":19},{"ruleId":"253","severity":1,"message":"254","line":92,"column":49,"nodeType":"255","messageId":"256","endLine":92,"endColumn":51},{"ruleId":"235","severity":1,"message":"257","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":13},{"ruleId":"235","severity":1,"message":"251","line":4,"column":10,"nodeType":"237","messageId":"238","endLine":4,"endColumn":14},{"ruleId":"235","severity":1,"message":"243","line":4,"column":16,"nodeType":"237","messageId":"238","endLine":4,"endColumn":27},{"ruleId":"235","severity":1,"message":"258","line":4,"column":29,"nodeType":"237","messageId":"238","endLine":4,"endColumn":38},{"ruleId":"235","severity":1,"message":"259","line":11,"column":23,"nodeType":"237","messageId":"238","endLine":11,"endColumn":34},{"ruleId":"260","severity":1,"message":"261","line":44,"column":1,"nodeType":"262","endLine":52,"endColumn":3},{"ruleId":"260","severity":1,"message":"261","line":13,"column":1,"nodeType":"262","endLine":16,"endColumn":3},{"ruleId":"260","severity":1,"message":"261","line":21,"column":1,"nodeType":"262","endLine":26,"endColumn":2},{"ruleId":"260","severity":1,"message":"261","line":28,"column":1,"nodeType":"262","endLine":33,"endColumn":3},{"ruleId":"260","severity":1,"message":"261","line":12,"column":1,"nodeType":"262","endLine":15,"endColumn":2},{"ruleId":"239","severity":1,"message":"263","line":16,"column":8,"nodeType":"241","endLine":16,"endColumn":17,"suggestions":"264"},{"ruleId":"235","severity":1,"message":"243","line":2,"column":16,"nodeType":"237","messageId":"238","endLine":2,"endColumn":27},{"ruleId":"235","severity":1,"message":"257","line":3,"column":8,"nodeType":"237","messageId":"238","endLine":3,"endColumn":13},{"ruleId":"235","severity":1,"message":"265","line":6,"column":8,"nodeType":"237","messageId":"238","endLine":6,"endColumn":14},{"ruleId":"235","severity":1,"message":"266","line":7,"column":8,"nodeType":"237","messageId":"238","endLine":7,"endColumn":18},{"ruleId":"235","severity":1,"message":"267","line":10,"column":8,"nodeType":"237","messageId":"238","endLine":10,"endColumn":22},{"ruleId":"239","severity":1,"message":"268","line":43,"column":8,"nodeType":"241","endLine":43,"endColumn":21,"suggestions":"269"},{"ruleId":"239","severity":1,"message":"270","line":58,"column":8,"nodeType":"241","endLine":58,"endColumn":19,"suggestions":"271"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"247","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"231","replacedBy":"272"},{"ruleId":"233","replacedBy":"273"},{"ruleId":"235","severity":1,"message":"236","line":1,"column":17,"nodeType":"237","messageId":"238","endLine":1,"endColumn":25},{"ruleId":"235","severity":1,"message":"247","line":1,"column":27,"nodeType":"237","messageId":"238","endLine":1,"endColumn":36},{"ruleId":"235","severity":1,"message":"257","line":4,"column":8,"nodeType":"237","messageId":"238","endLine":4,"endColumn":13},{"ruleId":"235","severity":1,"message":"274","line":2,"column":8,"nodeType":"237","messageId":"238","endLine":2,"endColumn":14},{"ruleId":"260","severity":1,"message":"261","line":26,"column":1,"nodeType":"262","endLine":30,"endColumn":3},{"ruleId":"235","severity":1,"message":"275","line":4,"column":18,"nodeType":"237","messageId":"238","endLine":4,"endColumn":35},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["278"],"'useLocation' is defined but never used.","'Clipboard' is defined but never used.","React Hook useEffect has missing dependencies: 'fetchIsLiked', 'fetchPalette', and 'fetchViews'. Either include them or remove the dependency array.",["279"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["280"],"'Link' is defined but never used.","'palette' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'axios' is defined but never used.","'useParams' is defined but never used.","'useDispatch' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'autoDismiss' and 'dispatch'. Either include them or remove the dependency array.",["281"],"'Button' is defined but never used.","'LikeButton' is defined but never used.","'ArtworkService' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchLikes'. Either include it or remove the dependency array.",["282"],"React Hook useEffect has missing dependencies: 'fetchIsLiked', 'fetchNumLikes', and 'fetchViews'. Either include them or remove the dependency array.",["283"],["276"],["277"],"'styled' is defined but never used.","'isStyledComponent' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},"Update the dependencies array to be: [dispatch, history, location.state, user]",{"range":"296","text":"297"},"Update the dependencies array to be: [fetchIsLiked, fetchPalette, fetchViews, paletteId]",{"range":"298","text":"299"},"Update the dependencies array to be: [dispatch, history, user]",{"range":"300","text":"301"},"Update the dependencies array to be: [autoDismiss, dispatch, message]",{"range":"302","text":"303"},"Update the dependencies array to be: [artwork._id, fetchLikes]",{"range":"304","text":"305"},"Update the dependencies array to be: [_id, fetchIsLiked, fetchNumLikes, fetchViews, user]",{"range":"306","text":"307"},[1671,1677],"[dispatch, history, location.state, user]",[2576,2587],"[fetchIsLiked, fetchPalette, fetchViews, paletteId]",[1555,1561],"[dispatch, history, user]",[580,589],"[autoDismiss, dispatch, message]",[1116,1129],"[artwork._id, fetchLikes]",[1818,1829],"[_id, fetchIsLiked, fetchNumLikes, fetchViews, user]"]