[{"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/index.js":"1","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/App.js":"2","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/reportWebVitals.js":"3","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Header.jsx":"4","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Footer.jsx":"5","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ArtworkCard.jsx":"6","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ColorBox.jsx":"7","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Home.js":"8","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Gallery.js":"9","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Hocs/withHeaderFooter.js":"10","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Build.js":"11","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/PaletteGallery.js":"12","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Register.js":"13","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Hooks/useArtwork.js":"14","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Login.js":"15","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Actions/auth.js":"16","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Actions/types.js":"17","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Reducers/index.js":"18","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Reducers/auth.js":"19","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/auth.js":"20","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/store.js":"21","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/LikeButton.jsx":"22","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/PaletteCard.jsx":"23","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Color-picker/ColorPicker.jsx":"24","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Color-picker/ColorPickerFields.jsx":"25","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Show.js":"26","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ColorCard.jsx":"27","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/palette.js":"28","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/artwork.js":"29","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/like.js":"30","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/user.js":"31","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ColorCode.jsx":"32","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Edit.js":"33","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Profile.js":"34","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/utils/color.js":"35","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Actions/message.js":"36","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Reducers/message.js":"37","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/MessageAlert.jsx":"38","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/device.js":"39"},{"size":664,"mtime":1616287932864,"results":"40","hashOfConfig":"41"},{"size":1709,"mtime":1619990968157,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1612305043951,"results":"43","hashOfConfig":"41"},{"size":2811,"mtime":1620602706449,"results":"44","hashOfConfig":"41"},{"size":462,"mtime":1619474395803,"results":"45","hashOfConfig":"41"},{"size":3523,"mtime":1620545416111,"results":"46","hashOfConfig":"41"},{"size":210,"mtime":1613282539265,"results":"47","hashOfConfig":"48"},{"size":1913,"mtime":1619991136083,"results":"49","hashOfConfig":"41"},{"size":1507,"mtime":1620545477431,"results":"50","hashOfConfig":"41"},{"size":361,"mtime":1619994073649,"results":"51","hashOfConfig":"41"},{"size":9522,"mtime":1633548095921,"results":"52","hashOfConfig":"41"},{"size":1252,"mtime":1620602351473,"results":"53","hashOfConfig":"41"},{"size":5253,"mtime":1619832910538,"results":"54","hashOfConfig":"41"},{"size":527,"mtime":1613689423604,"results":"55","hashOfConfig":"48"},{"size":4873,"mtime":1620547920187,"results":"56","hashOfConfig":"41"},{"size":2032,"mtime":1616130377139,"results":"57","hashOfConfig":"41"},{"size":440,"mtime":1615969298386,"results":"58","hashOfConfig":"41"},{"size":192,"mtime":1615972599812,"results":"59","hashOfConfig":"41"},{"size":899,"mtime":1615581590686,"results":"60","hashOfConfig":"41"},{"size":562,"mtime":1616131445046,"results":"61","hashOfConfig":"41"},{"size":344,"mtime":1613947511152,"results":"62","hashOfConfig":"41"},{"size":219,"mtime":1620550241161,"results":"63","hashOfConfig":"48"},{"size":4401,"mtime":1620602473329,"results":"64","hashOfConfig":"41"},{"size":2436,"mtime":1633540963978,"results":"65","hashOfConfig":"41"},{"size":4503,"mtime":1633554012630,"results":"66","hashOfConfig":"41"},{"size":6326,"mtime":1620611665445,"results":"67","hashOfConfig":"41"},{"size":1398,"mtime":1620379364348,"results":"68","hashOfConfig":"41"},{"size":1052,"mtime":1616898943647,"results":"69","hashOfConfig":"41"},{"size":264,"mtime":1616130972848,"results":"70","hashOfConfig":"41"},{"size":483,"mtime":1616130741599,"results":"71","hashOfConfig":"41"},{"size":274,"mtime":1616130751134,"results":"72","hashOfConfig":"41"},{"size":1179,"mtime":1620550216104,"results":"73","hashOfConfig":"41"},{"size":6700,"mtime":1620547896865,"results":"74","hashOfConfig":"41"},{"size":4540,"mtime":1620601281428,"results":"75","hashOfConfig":"41"},{"size":661,"mtime":1619661182416,"results":"76","hashOfConfig":"41"},{"size":240,"mtime":1616054423660,"results":"77","hashOfConfig":"41"},{"size":485,"mtime":1615972545848,"results":"78","hashOfConfig":"41"},{"size":932,"mtime":1616053396823,"results":"79","hashOfConfig":"41"},{"size":556,"mtime":1620379262526,"results":"80","hashOfConfig":"41"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"g5ou3t",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"g5yn7q",{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"83"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"83"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"83"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"83"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/index.js",[],["182","183"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/App.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/reportWebVitals.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Header.jsx",["184"],"import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link, useLocation, useHistory } from 'react-router-dom';\nimport { selectAuth } from '../Reducers/auth';\nimport { logout } from '../Actions/auth';\n\nconst BORDER_RADIUS = 3;\n\nconst NavbarContainer = styled(Navbar)`\n    border-bottom: 0;\n`;\n\nconst NavbarBrand = styled(Button)`\n    border: ${BORDER_RADIUS}px solid black;\n    font-size: 1rem;\n    border-radius: 2rem;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    background-color: white;\n    color: black;\n`;\n\nconst NavlinkContainer = styled(Nav.Link)`\n    padding-left: 2rem;\n    padding-right: 2rem;\n    font-size: 15px !important; \n    \n`;\n\n\nfunction Header() {\n    const { user } = useSelector(selectAuth);\n    const dispatch = useDispatch();\n    const location = useLocation();\n    // console.log(user);\n\n    const handleLogout = () => {\n        dispatch(logout());\n    }\n\n    const renderLoggedIn = (\n        <Form inline>\n            <Button className=\"ml-auto btn btn-sm btn-secondary\" onClick={handleLogout}>Log out</Button>\n        </Form>\n    )\n\n    const renderLoggedOut = (\n        <Form inline>\n            <Button className=\"ml-auto mr-2 btn btn-sm btn-secondary\" href=\"/register\">Register</Button>\n            <Link to={{\n                pathname: \"/login\",\n                state: { from: location.pathname }\n            }}>\n                <Button className=\"ml-auto btn btn-sm btn-secondary\">Login</Button>\n            </Link>\n        </Form>\n    )\n    return (\n        <NavbarContainer className=\"text-align-center\" bg=\"light\" expand=\"lg\" sticky=\"top\">\n            <NavbarBrand variant=\"dark\" href=\"/\">Color Palettes</NavbarBrand>\n            <a\n                href='https://www.linkedin.com/in/freya-wu/'\n                className=\"pl-2 mr-auto\"\n                style={{ fontSize: \"1rem\", color: \"black\" }}\n            >\n                by Freya\n            </a>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\" >\n                <Nav className=\"ml-auto mr-auto\">\n                    <NavlinkContainer href=\"/palettes\">Palettes</NavlinkContainer>\n                    <NavlinkContainer href=\"/build\">Build</NavlinkContainer>\n                    <NavlinkContainer href=\"/gallery\">Gallery</NavlinkContainer>\n                    {user && <NavlinkContainer href=\"/profile\">My Page</NavlinkContainer>}\n                </Nav>\n                {user ? renderLoggedIn : renderLoggedOut}\n            </Navbar.Collapse>\n        </NavbarContainer>\n    );\n}\n\nexport default Header;\n","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Footer.jsx",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ArtworkCard.jsx",["185"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Card from 'react-bootstrap/Card';\nimport { Heart, HeartFill, EyeFill } from \"react-bootstrap-icons\";\nimport { LikeButton } from './PaletteCard';\n\nimport PaletteService from '../Services/palette';\nimport LikeService from '../Services/like';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\n\nconst CardImage = styled(Card.Img)`\n    height: 270px;\n    object-fit: cover;\n`;\n\nconst ColorSpan = styled.span`\n    display: inline-block;\n    flex: 1;\n    width: calc(100% / ${props => props.colorSize});\n    height: 1.5em;\n    background-color: ${props => props.color};\n`;\n\n\nfunction ArtworkCard({ artwork }) {\n    const { user } = useSelector(selectAuth);\n    const [isLiked, setIsLiked] = useState(false);\n    const [likes, setLikes] = useState(0);\n    const colors = artwork.colors;\n    const [views, setViews] = useState(artwork.views);\n\n    const fetchIsLiked = async () => {\n        if (!user) {\n            setIsLiked(false);\n            return;\n        }\n        try {\n            const { data: isLiked } = await LikeService.doesLikeExist(artwork._id);\n            setIsLiked(isLiked);\n        } catch (e) {\n            // throw Error(e);\n            console.log(e);\n        }\n    }\n\n    const fetchLikes = async () => {\n        const { data: likes } = await LikeService.getLikes(artwork._id);\n        setLikes(likes);\n    }\n\n    const fetchViews = async () => {\n        const { data: views } = await PaletteService.getPaletteViews(artwork._id);\n        setViews(views);\n    }\n\n    useEffect(() => {\n        fetchIsLiked();\n        fetchLikes();\n        fetchViews();\n    }, [artwork._id])\n\n    const addLike = async () => {\n        await LikeService.postLike(artwork._id);\n        fetchLikes();\n    };\n\n    return (\n        <Card className=\"border-0\">\n            <Link\n                key={artwork._id}\n                to={{\n                    pathname: `/palettes/${artwork._id}`\n                }}\n            >\n                <div className=\"position-relative\">\n                    <CardImage\n                        className=\"img-fluid\"\n                        variant=\"top\"\n                        src={artwork.image}\n                    />\n                </div>\n                <div className=\"d-flex\">\n                    {colors.map(color => <ColorSpan key={color} color={color} colorSize={colors.length} />)}\n                </div>\n            </Link>\n            <Card.Footer className=\"d-flex border rounded-bottom bg-white\">\n                <h6 className=\"m-0 align-items-center\">by {artwork.author.username}</h6>\n                <div className=\"d-flex ml-auto align-items-center\">\n                    <LikeButton isLiked={isLiked} isLoggedIn={user.username} onClick={addLike}>\n                        {user.username ?\n                            (isLiked ? <HeartFill className=\"mr-1\" /> :\n                                <Heart className=\"mr-1\" />) :\n                            <HeartFill className=\"mr-1\" />\n                        }\n                    </LikeButton>\n                    <div className=\"\">{likes}</div>\n                </div>\n                <div className=\"d-flex ml-2 align-items-center\">\n                    <EyeFill variant=\"transparent\" className=\"mr-1\" />\n                    <div>{views}</div>\n                </div>\n            </Card.Footer>\n        </Card>\n    )\n}\nexport default ArtworkCard;\n","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ColorBox.jsx",[],["186","187"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Home.js",["188","189"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\nimport MessageAlert from '../Components/MessageAlert';\n\nconst Column = styled(Col)`\n    background-color: ${props => props.color};\n`;\n\nfunction HomePage() {\n    return (\n        <Container fluid className=\"d-flex flex-grow-1\">\n            <MessageAlert />\n            <Row className=\"flex-grow-1\">\n                <Column color={\"#F299E3\"} className=\"d-flex col-12 col-md-4\">\n                    <div className=\"align-self-center mx-auto text-center\">\n                        <h1>Palette</h1>\n                        <p>There are a lot of colors.</p>\n                        <Button variant=\"outline-dark\" href=\"/palettes\">Check out colors</Button>\n                    </div>\n                </Column>\n                <Column color={\"#29F2F2\"} className=\"d-flex col-12 col-md-4\">\n                    <div className=\"align-self-center mx-auto text-center\">\n                        <h1>Build</h1>\n                        <p>Build your own colors.</p>\n                        <Button variant=\"outline-dark\" href=\"/build\">Get started</Button>\n                    </div>\n                </Column>\n                <Column color={\"#D7F29B\"} className=\"d-flex col-12 col-md-4\">\n                    <div className=\"align-self-center mx-auto text-center\">\n                        <h1>Gallery</h1>\n                        <p>There are a lot of samples.</p>\n                        <Button variant=\"outline-dark\" href=\"/gallery\">Check out samples</Button>\n                    </div>\n                </Column>\n            </Row>\n        </Container>\n    );\n}\n\nexport default withHeaderFooter(HomePage);","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Gallery.js",["190"],"\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\n\nimport Container from 'react-bootstrap/Container';\nimport ArtworkCard from '../Components/ArtworkCard';\nimport ArtworkService from '../Services/artwork';\nimport MessageAlert from '../Components/MessageAlert';\n\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\nconst ArtworksContainer = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(270px, 1fr));\n    grid-gap: 20px;\n    padding-bottom: 20px;\n`;\n\nfunction GalleryPage() {\n    const [artworks, setArtworks] = useState([]);\n    const { user } = useSelector(selectAuth);\n\n    useEffect(() => {\n        const fetchArtworks = async () => {\n            const { data: artworks } = await ArtworkService.getAllArtworks();\n            setArtworks(artworks);\n        };\n        fetchArtworks();\n    }, []);\n\n    return (\n        <>\n            <Container fluid className=\"cus-container\">\n                <MessageAlert />\n                <ArtworksContainer className=\"pt-4 px-4 card-deck\">\n                    {\n                        artworks.map((artwork) => (\n                            artwork.image && <ArtworkCard key={artwork._id} artwork={artwork} />\n                        ))\n                    }\n                </ArtworksContainer>\n            </Container>\n        </>\n    );\n}\n\nexport default withHeaderFooter(GalleryPage);\n\n","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Hocs/withHeaderFooter.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Build.js",["191","192","193","194","195","196"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/PaletteGallery.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Register.js",["197","198","199"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { register } from '../Actions/auth';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\nimport { useHistory, Redirect } from \"react-router-dom\";\nimport { setMessage } from '../Actions/message';\nimport MessageAlert from '../Components/MessageAlert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\nconst FormContainer = styled(Form)`\n    background:#f7f7f7;\n`;\n\nfunction RegisterPage() {\n    const { user } = useSelector(selectAuth);\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const schema = Yup.object().shape({\n        username: Yup.string()\n            .required()\n            .min(2)\n            .max(25),\n        email: Yup.string()\n            .required()\n            .email(),\n        password: Yup.string()\n            .required()\n            .min(4)\n            .max(20),\n    })\n\n    const handleSubmit = (input) => {\n        dispatch(register(input));\n    }\n\n    useEffect(() => {\n        if (user.username) {\n            dispatch(setMessage(\"info\", `Welcome, ${user.username}`))\n            console.log(user.username);\n            history.replace('/palettes');\n        }\n    }, [user])\n\n    return (\n        <Container fluid>\n            <Row className=\"justify-content-center mt-2 mt-md-3\">\n                <Col className=\"col-12 col-md-6 mt-2 mt-sm-5\">\n                    <div className=\"text-center py-3\">\n                        <h3>Sign up to Color Palette</h3>\n                    </div>\n                    <Formik\n                        validationSchema={schema}\n                        onSubmit={(values) => { handleSubmit(values) }}\n                        initialValues={{\n                            username: '',\n                            email: '',\n                            password: '',\n                        }}\n                    >\n                        {({ handleSubmit, handleChange, values, errors }) => (\n                            <FormContainer className=\"p-5\" noValidate onSubmit={handleSubmit} >\n                                <MessageAlert />\n                                <div className=\"w-100\">\n                                    <Form.Group controlId=\"username\">\n                                        <Form.Label>Username</Form.Label>\n                                        <Form.Control\n                                            name=\"username\"\n                                            type=\"string\"\n                                            value={values.username}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.username} />\n                                        <Form.Control.Feedback>\n                                            {errors.username}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"email\">\n                                        <Form.Label>Email address</Form.Label>\n                                        <Form.Control\n                                            name=\"email\"\n                                            type=\"email\"\n                                            value={values.email}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.email} />\n                                        <Form.Control.Feedback>\n                                            {errors.email}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"password\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.password} />\n                                        <Form.Control.Feedback>\n                                            {errors.password}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Button variant=\"dark\" type=\"submit\" block>\n                                        Register\n                                    </Button>\n                                </div>\n                            </FormContainer>\n                        )}\n                    </Formik>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default withHeaderFooter(RegisterPage);","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Hooks/useArtwork.js",["200"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction useArtwork(id) {\n    const[data, setData] = useState({});\n    useEffect(() => {\n        console.log(\"artwork called\");\n        const fetchData = async () => {\n            const response = await axios.get(`/artworks/${id}`);\n            setData(response.data);\n        };\n        fetchData();\n    }, [id]); //只在id有更新的时候，useEffect更新 only rerun useEffect() when id changes\n    return data;\n}\n\nexport default useArtwork;",["201","202"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Login.js",["203","204"],"import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { login } from '../Actions/auth';\nimport { selectAuth } from '../Reducers/auth';\nimport { setMessage } from '../Actions/message'\nimport MessageAlert from '../Components/MessageAlert';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\n\nconst FormContainer = styled(Form)`\n    background:#f7f7f7;\n`;\n\nfunction LoginPage() {\n    const { user } = useSelector(selectAuth);\n    const location = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const schema = Yup.object().shape({\n        username: Yup.string()\n            .required()\n            .min(2)\n            .max(25),\n        password: Yup.string()\n            .required()\n    })\n\n    const handleSubmit = (input) => {\n        dispatch(login(input));\n    }\n\n    useEffect(() => {\n        if (user.username) {\n            dispatch(setMessage(\"info\", `Welcome back, ${user.username}`))\n            if (location.state && location.state.from &&\n                (location.state.from !== \"/login\" && location.state.from !== \"/register\")) {\n                history.push(location.state.from);\n            } else {\n                history.push('/palettes');\n            }\n        }\n    }, [user]);//only run useEffect when user updates. empty[] / no [], run after every render\n\n    return (\n        <Container fluid>\n            <MessageAlert />\n            <Row className=\"justify-content-center mt-2 mt-md-3\">\n                <Col className=\"col-12 col-md-6 mt-2 mt-sm-5\">\n                    <div className=\"text-center py-3\">\n                        <h3>Sign in to Color Palette</h3>\n                    </div>\n                    <Formik\n                        validationSchema={schema}\n                        onSubmit={(values) => { handleSubmit(values) }}\n                        initialValues={{\n                            username: '',\n                            password: '',\n                        }}\n                    >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            values,\n                            errors,\n                        }) => (\n                            <FormContainer onSubmit={handleSubmit} className=\"d-flex p-5\">\n\n                                <div className=\"w-100\">\n                                    <Form.Group controlId=\"username\">\n                                        <Form.Label>Username</Form.Label>\n                                        <Form.Control\n                                            name=\"username\"\n                                            type=\"string\"\n                                            value={values.username}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.username}\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.username}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n\n                                    <Form.Group controlId=\"password\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            name=\"password\"\n                                            type=\"password\"\n                                            value={values.password}\n                                            onChange={handleChange}\n                                            isInvalid={!!errors.password}\n                                        />\n                                        <Form.Control.Feedback type=\"invalid\">\n                                            {errors.password}\n                                        </Form.Control.Feedback>\n                                    </Form.Group>\n                                    <Button variant=\"dark\" type=\"submit\" block>\n                                        Sign in\n                                    </Button>\n                                </div>\n                            </FormContainer>\n                        )}\n                    </Formik>\n                </Col>\n            </Row>\n\n\n        </Container>\n    );\n}\n\n\nexport default withHeaderFooter(LoginPage);\n","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Actions/auth.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Actions/types.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Reducers/index.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Reducers/auth.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/auth.js",["205"],"import axios from 'axios';\n\nconst API_URL = \"/api/auth/\";\n\nconst register = (username, email, password) => {\n    return axios.post(API_URL + \"register\", {\n        username,\n        email,\n        password,\n    });\n};\n\nconst login = (username, password) => {\n    return axios.post(API_URL + \"login\", {\n        username,\n        password,\n    });\n};\n\nconst fetchUser = () => {\n    return axios.get(API_URL + \"profile\");\n};\n\nconst logout = () => {\n    return axios.get(API_URL + \"logout\");\n};\n\nexport default {\n    register,\n    login,\n    fetchUser,\n    logout,\n};","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/store.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/LikeButton.jsx",["206","207","208"],"import React, { useState, useEffect } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nimport axios from 'axios';\n\nexport default function LikeButton({ likes }) {\n\n    return (\n        <Button variant=\"danger\"> {likes}</Button>\n    );\n}",["209","210"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/PaletteCard.jsx",["211"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';//这个link是干什么用的？\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\nimport Card from 'react-bootstrap/Card';\nimport { Heart, HeartFill, EyeFill, ImageFill } from \"react-bootstrap-icons\";\nimport styled from 'styled-components';\nimport LikeService from '../Services/like';\nimport PaletteService from '../Services/palette';\n\nconst ColorSpan = styled.div`\n    display: inline-block;\n    flex: 1;\n    width: calc(100% / ${props => props.colorSize});\n    height: 4em;\n    background-color: ${props => props.color};\n    border-top-left-radius: ${props => props.index === 0 && '0.2rem'};\n    border-top-right-radius: ${props => props.index === props.colorSize - 1 && '0.2rem'};\n`;\n\nexport const LikeButton = styled.div`\n    cursor: ${({ isLoggedIn }) => isLoggedIn && 'pointer'};\n    color: ${({ isLiked }) => isLiked && 'red'};\n    &:hover {\n        color: ${({ isLoggedIn }) => isLoggedIn && 'red'};\n    }\n`;\n\nconst CardThumbnail = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    padding: 0 12px;\n    height: 40px;\n`;\n\n\nfunction PaletteCard(props) {\n    const { user } = useSelector(selectAuth);\n    const [isLiked, setIsLiked] = useState(false);\n    const [numLikes, setNumLikes] = useState(0);\n    const [views, setViews] = useState(0);\n    const { _id, colors, size, author, image } = props.palette;\n\n    const fetchViews = async () => {\n        const { data: views } = await PaletteService.getPaletteViews(_id);\n        setViews(views);\n    }\n\n    const fetchNumLikes = async () => {\n        try {\n            const { data: likes } = await LikeService.getLikes(_id);\n            setNumLikes(likes);\n        } catch (e) {\n            throw Error(e);\n        }\n    }\n\n    const fetchIsLiked = async () => {\n        if (!user) {\n            setIsLiked(false);\n            return;\n        }\n        try {\n            const { data: isLiked } = await LikeService.doesLikeExist(_id);\n            setIsLiked(isLiked);\n        } catch (e) {\n            // throw Error(e);\n            console.log(e);\n        }\n    }\n\n    useEffect(() => {\n        fetchIsLiked();\n        fetchNumLikes();\n        fetchViews();\n    }, [user]);\n\n    const handleClickLike = async () => {\n        if (!user.username) return;\n        try {\n            if (isLiked) {\n                await LikeService.deleteLike(_id);\n            } else {\n                await LikeService.postLike(_id);\n            }\n            fetchIsLiked();\n            fetchNumLikes();\n            if (props.onLiked != null) {\n                props.onLiked();\n            }\n        } catch (e) {\n            throw Error(e);\n        }\n    };\n\n    return (\n        <Card className=\"border-0\">\n            <Link\n                key={_id}\n                to={{\n                    pathname: `/palettes/${_id}`\n                }}\n            >\n                <CardThumbnail className=\"d-flex justify-content-end text-white mt-2\">\n                    {image && <ImageFill />}\n                </CardThumbnail>\n                <div className=\"d-flex rounded-top\">\n                    {colors.map((color, index) => (\n                        <ColorSpan key={index} colorSize={size} color={color} index={index} />\n                    ))}\n                </div>\n            </Link>\n            <Card.Footer className=\"d-flex border rounded-bottom bg-white\">\n                <h6 className=\"m-0 align-items-center\">by {author.username}</h6>\n                <div className=\"d-flex ml-auto align-items-center\">\n                    <LikeButton isLiked={isLiked} isLoggedIn={user.username} onClick={handleClickLike}>\n                        {user.username ?\n                            (isLiked ? <HeartFill variant=\"transparent\" className=\"mr-1\" /> :\n                                <Heart variant=\"transparent\" className=\"mr-1\" />) :\n                            <HeartFill className=\"mr-1\" />\n                        }\n                    </LikeButton>\n                    <div className=\"\">{numLikes}</div>\n                </div>\n                <div className=\"d-flex ml-2 align-items-center\">\n                    <EyeFill variant=\"transparent\" className=\"mr-1\" />\n                    <div>{views}</div>\n                </div>\n            </Card.Footer>\n        </Card>\n    )\n}\n\nexport default PaletteCard;\n","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Color-picker/ColorPicker.jsx",["212"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/Color-picker/ColorPickerFields.jsx",["213","214","215","216"],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Show.js",["217","218","219"],"import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport styled from 'styled-components';\n\nimport ColorCard from '../Components/ColorCard';\nimport PaletteService from '../Services/palette';\nimport LikeService from '../Services/like';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\nimport MessageAlert from '../Components/MessageAlert';\nimport { Heart, HeartFill, TrashFill, EyeFill, PencilSquare, Link45deg } from 'react-bootstrap-icons';\n\nconst ColorDiv = styled.div`\n    flex: 1 1 0;\n    background-color: ${props => props.color};\n    padding-top: 25%;\n`;\n\nconst LikeButton = styled.div`\n    cursor: ${({ isLoggedIn }) => isLoggedIn && 'pointer'};\n    color: ${({ isLiked }) => isLiked && 'red'};\n    &:hover {\n        color: ${({ isLoggedIn }) => isLoggedIn && 'red'};\n    }\n`;\n\nfunction ShowPage() {\n    const { paletteId } = useParams();\n    const { user } = useSelector(selectAuth);\n    const [palette, setPalette] = useState({});\n    const [isLiked, setIsLiked] = useState(false);\n    const [numLikes, setNumLikes] = useState(0);\n    const [views, setViews] = useState(0);\n    const history = useHistory();\n\n    const fetchViews = async () => {\n        const { data: views } = await PaletteService.getPaletteViews(paletteId);\n        setViews(views + 1);\n        await PaletteService.updatePaletteViews(paletteId, views + 1);\n    }\n\n\n    const fetchIsLiked = async () => {\n        if (!user.username) {\n            setIsLiked(false);\n            return;\n        }\n        try {\n            const { data: isLiked } = await LikeService.doesLikeExist(paletteId);\n            setIsLiked(isLiked);\n        } catch (e) {\n            throw Error(e);\n        }\n    }\n\n    const fetchNumLikes = async () => {\n        try {\n            const { data: likes } = await LikeService.getLikes(paletteId);\n            setNumLikes(likes);\n        } catch (e) {\n            throw Error(e);\n        }\n    }\n\n    const handleClickLike = async () => {\n        try {\n            if (isLiked) {\n                await LikeService.deleteLike(paletteId);\n            } else {\n                await LikeService.postLike(paletteId);\n            }\n            fetchIsLiked();\n        } catch (e) {\n            throw Error(e);\n        }\n    }\n\n    const handleClickDelete = async () => {\n        try {\n            await PaletteService.deletePalette(paletteId);\n            setIsLiked(isLiked);\n            history.replace('/palettes');\n        } catch (e) {\n            // throw Error(e);\n        }\n    }\n\n    const fetchPalette = async () => {\n        try {\n            const { data: palette } = await PaletteService.getPalette(paletteId);\n            setPalette(palette);\n        } catch (e) {\n            throw Error(e)\n        }\n    }\n\n    useEffect(() => {\n        fetchViews();\n    }, [])\n\n    useEffect(() => {\n        fetchPalette();\n        fetchIsLiked();\n        fetchNumLikes();\n    }, [isLiked, user])\n\n    const renderColorDiv = (\n        <Container fluid className=\"d-flex p-0 bg-white\">\n            {palette && palette.colors && palette.colors.map(color => (\n                <ColorDiv key={color} color={color} colorSize={palette.size} />\n            ))}\n        </Container>\n    )\n\n    const renderImage = (\n        <Container fluid className=\"d-flex justify-content-center p-0\">\n            <Image\n                fluid\n                src={palette.image}\n                style={{ width: \"100%\", objectFit: \"contain\", alignSelf: \"start\" }}\n            >\n            </Image>\n        </Container >\n    )\n\n    return (\n        <Container>\n            <MessageAlert />\n            <Row>\n                {palette.image === \"\" ? renderColorDiv : renderImage}\n            </Row>\n            <Row className=\"d-flex bg-white py-2 mb-3 px-2 px-md-0 justify-content-center\">\n                <div className=\"font-weight-bold mr-auto mt-2\">\n                    Palette saved by {palette && palette.author && palette.author.username}\n                </div>\n                <div className=\"d-flex align-items-center mr-2\">\n                    <EyeFill variant=\"transparent\" className=\"mr-1\" />\n                    <div className=\"mr-1\">{views}</div>\n                </div>\n\n                <div className=\"d-flex align-items-center\">\n                    <LikeButton isLiked={isLiked} isLoggedIn={user.username} onClick={handleClickLike}>\n                        {user.username ?\n                            (isLiked ? <HeartFill variant=\"transparent\" className=\"mr-1\" /> :\n                                <Heart variant=\"transparent\" className=\"mr-1\" />) :\n                            <HeartFill className=\"mr-1\" />\n                        }\n                    </LikeButton>\n                    <div className=\"\">{numLikes}</div>\n                </div>\n\n                <div className=\"pt-2 pt-md-0\">\n                    {user.username && palette.author && palette.author.username === user.username &&\n                        <>\n                            <Button variant=\"dark\" href={`/palettes/${paletteId}/edit`} className=\"ml-3\">\n                                <PencilSquare /> Edit\n                            </Button>\n                            <Button variant=\"dark\" className=\"ml-3\" onClick={handleClickDelete}>\n                                <TrashFill /> Delete\n                            </Button>\n                        </>\n                    }\n                    {palette.image &&\n                        <Button variant=\"dark\" className=\"ml-3\" href={palette.image}>\n                            <Link45deg /> Source\n                        </Button>\n                    }\n                </div>\n            </Row>\n\n            <div className=\"d-flex flex-wrap w-100 mb-4\">\n                {palette.colors && palette.colors.map(color =>\n                    <ColorCard key={color} color={color} lessOrEqualToFive={palette.size <= 5} />\n                )}\n            </div>\n        </Container >\n    );\n}\n\nexport default withHeaderFooter(ShowPage);","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ColorCard.jsx",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/palette.js",["220"],"import axios from 'axios';\n\nconst API_URL = '/api/palettes/';\n\nconst getAllPalettes = () => {\n    return axios.get(API_URL);\n}\n\nconst getPalette = (paletteId) => {\n    return axios.get(API_URL + paletteId);\n}\n\nconst getPaletteViews = (paletteId) => {\n    return axios.get(API_URL + paletteId + '/views');\n}\n\nconst updatePaletteViews = (paletteId, views) => {\n    return axios.patch(API_URL + paletteId + '/views', {\n        views: views,\n    });\n}\n\nconst savePalette = (colors, image) => {\n    const views = 0;\n    return axios.post(API_URL, {\n        colors: colors,\n        image: image,\n        views: views\n    });\n}\n\nconst editPalette = (paletteId, colors, image, size) => {\n    return axios.patch(API_URL + paletteId + '/edit', {\n        colors: colors,\n        image: image,\n        size: size\n    });\n}\n\nconst deletePalette = (paletteId) => {\n    return axios.delete(API_URL + paletteId);\n}\n\nexport default {\n    getAllPalettes,\n    getPalette,\n    getPaletteViews,\n    updatePaletteViews,\n    savePalette,\n    editPalette,\n    deletePalette\n};","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/artwork.js",["221"],"import axios from 'axios';\n\nconst API_URL = '/api/artworks/';\n\nconst getAllArtworks = () => {\n    return axios.get(API_URL);\n}\n\nconst getPalette = (paletteId) => {\n    return axios.get(API_URL + paletteId);\n}\n\nexport default {\n    getAllArtworks,\n    getPalette\n};","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/like.js",["222"],"import axios from 'axios';\n\nconst API_URL = '/api/like/';\n\nconst getLikes = (paletteId) => {\n    return axios.get(API_URL + paletteId + '/count');\n};\n\nconst doesLikeExist = (paletteId) => {\n    return axios.get(API_URL + paletteId);\n};\n\nconst postLike = (paletteId) => {\n    return axios.post(API_URL + paletteId);\n}\n\nconst deleteLike = (paletteId) => {\n    return axios.delete(API_URL + paletteId);\n}\n\nexport default {\n    getLikes,\n    doesLikeExist,\n    postLike,\n    deleteLike\n}","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Services/user.js",["223"],"import axios from 'axios';\nconst API_URL = '/api/user/';\n\nconst getUserPalettes = () => {\n    return axios.get(API_URL + 'palettes');\n}\n\nconst getLikedPalettes = () => {\n    return axios.get(API_URL + 'liked');\n}\n\nexport default {\n    getUserPalettes,\n    getLikedPalettes\n}","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/ColorCode.jsx",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Edit.js",["224","225","226","227","228","229"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';// hook, subscribe the component to store\nimport { useParams, useHistory } from 'react-router-dom';\nimport { selectAuth } from '../Reducers/auth';\nimport tinyColor from 'tinycolor2';\nimport styled from 'styled-components';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Image from 'react-bootstrap/Image';\nimport { Plus, Dash } from 'react-bootstrap-icons';\nimport ColorPicker from '../Components/Color-picker/ColorPicker';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\nimport PaletteService from '../Services/palette';\nimport { ColorDiv, ColorCol, ColorBoxContainer } from './Build';\n\nconst ColorBoxOverlay = styled.div`\n    opacity: 0;\n    transition: opacity 0.3s ease;\n    overflow: hidden;\n    width: 100%;\n    height: 100%;\n`;\n\nconst ColorBox = styled.div`\n    width: 95%;\n    height: 95%;\n    &:hover ${ColorBoxOverlay} {\n        opacity: 0.8;\n    }\n`;\n\nconst AddColorButton = styled(Button)`\n    width: 10%;\n    height: 7vw;\n    font-size: 4vw;\n`;\n\nconst DeleteColorButton = styled(Button)`\n    font-size: 1.5vw;\n`;\n\nfunction BuildPage() {\n    const { user } = useSelector(selectAuth);\n    const { paletteId } = useParams();\n    const [palette, setPalette] = useState([]);\n    const [colors, setColors] = useState([tinyColor.random()]);\n    const [colorIndex, setColorIndex] = useState(0);\n    const [image, setImage] = useState(\"\");\n    const history = useHistory();\n\n    useEffect(() => {\n        const fetchPalette = async () => {\n            const { data: palette } = await PaletteService.getPalette(paletteId);\n            setPalette(palette);\n            setColors(palette.colors.map(color => tinyColor(color)));\n            setImage(palette.image);\n        }\n        fetchPalette();\n    }, [paletteId]);\n\n    const currentColor = () => {\n        return colors[colorIndex];\n    }\n\n    const handleSelectColorBox = index => {\n        setColorIndex(index);\n    }\n\n    const handleColorChange = color => {\n        setColors([\n            ...colors.slice(0, colorIndex),\n            tinyColor(color.rgb),\n            ...colors.slice(colorIndex + 1)\n        ])\n    }\n\n    const handleDeleteColor = (e, index) => {\n        e.stopPropagation();\n        if (index === colorIndex) {\n            setColorIndex(colorIndex - 1);\n        }\n        setColors(colors.filter((_, idx) => idx != index));\n    }\n\n    const handleAddColor = index => {\n        if (colorIndex === 9) return;\n        for (let i = 0; i < colors.length; i++) {\n            if (i === colorIndex) continue;\n            if (colors[i] === colors[colorIndex]) {\n                return;\n            }\n        }\n        setColors([...colors, currentColor()]);\n        setColorIndex(colors.length);\n    }\n\n    const handleImageChange = e => {\n        const image = e.target.value;\n        setImage(image);\n    }\n\n    const handleUpdate = async e => {\n        e.preventDefault();\n        const newColors = colors.map(color => color.toRgbString())\n        const newSize = newColors.length;\n        // console.log(newColors);\n        const { data: palette } = await PaletteService.editPalette(paletteId, newColors, image, newSize);\n        // console.log(palette);\n        setPalette(palette);\n        history.replace('/palettes');\n    }\n\n    const renderLoggedIn = (\n        <>\n            <Container className=\"my-1 p-0\">\n                <div className=\"text-center font-weight-bold mb-1\">\n                    Artwork\n                </div>\n                <Form>\n                    <Form.Group controlId=\"onlineImage\" className=\"d-flex\">\n                        <Form.Control placeholder=\"Enter an image address (Optional)\" onChange={handleImageChange} />\n                    </Form.Group>\n                </Form>\n            </Container>\n            <Container className=\"pb-3\">\n                {image !== \"\" &&\n                    <div className=\"text-center font-weight-bold pb-2\">\n                        Preview\n                    </div>\n                }\n                <Image src={image} fluid />\n            </Container>\n            <Container>\n                <Button variant=\"dark\" type=\"submit\" block onClick={handleUpdate}>\n                    Update\n                </Button>\n            </Container>\n        </>\n    )\n\n    return (\n        <>\n            <Container fluid className=\"bg-light px-0 pb-5\">\n                < ColorDiv color={currentColor().toRgbString()} />\n                <Container>\n                    <ColorPicker\n                        className=\"p-2\"\n                        color={currentColor().toRgb()}\n                        onChange={handleColorChange}\n                    />\n                </Container>\n                <Container className=\"d-flex\">\n                    <div className=\"font-weight-bold\">Colors</div>\n                    <div className=\"ml-auto pb-2\">\n                        <Plus size={25} style={{ cursor: \"pointer\" }} onClick={handleAddColor} />\n                        {colors.length > 1 && <Dash size={25} style={{ cursor: \"pointer\" }} onClick={(e) => handleDeleteColor(e, colorIndex)} />}\n                    </div>\n                </Container>\n\n                <Container className=\"border bg-white\">\n                    <Row>\n                        {colors.map((color, index) => (\n                            <ColorCol className=\"p-0\">\n                                <ColorBoxContainer\n                                    className=\"rounded d-flex justify-content-center\"\n                                    key={index}\n                                    style={{ borderStyle: index === colorIndex ? \"solid\" : \"none\", borderColor: \"black\", borderWidth: \"2px\" }}\n                                    onClick={() => handleSelectColorBox(index)}\n                                >\n                                    <div\n                                        className=\"rounded w-100 h-100\"\n                                        style={{\n                                            backgroundColor: color.toRgbString(),\n                                            border: \"1px solid white\"\n                                        }}\n                                    />\n                                </ColorBoxContainer>\n                            </ColorCol>\n                        ))}\n                    </Row>\n                </Container>\n                {user && renderLoggedIn}\n            </Container>\n        </>\n    );\n}\n\nexport default withHeaderFooter(BuildPage);\n","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Pages/Profile.js",["230","231","232","233"],"\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport { PaletteFill, HeartFill } from 'react-bootstrap-icons';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectAuth } from '../Reducers/auth';\nimport PaletteCard from '../Components/PaletteCard';\nimport UserService from '../Services/user';\nimport withHeaderFooter from '../Hocs/withHeaderFooter';\n\nfunction Profile() {\n    const { user } = useSelector(selectAuth);\n    // console.log(user);\n    const [userPalettes, setUserPalettes] = useState([]);\n    const [likedPalettes, setLikedPalettes] = useState([]);\n    const history = useHistory();\n\n    const fetchUserPalettes = async () => {\n        const { data: userPalettes } = await UserService.getUserPalettes();\n        setUserPalettes(userPalettes);\n    }\n\n    const fetchLikedPalettes = async () => {\n        const { data: likedPalettes } = await UserService.getLikedPalettes();\n        setLikedPalettes(likedPalettes);\n    };\n\n    useEffect(() => {\n        if (user === \"\") {\n            history.push('/login');\n        }\n        fetchUserPalettes();\n        fetchLikedPalettes();\n    }, [user]);\n\n    return (\n        <Container fluid>\n            <Container className=\"my-3\">\n                <h3>{user.username}'s profile</h3>\n            </Container>\n            <Container>\n                <Tabs defaultActiveKey=\"palettes\" id=\"profile-tabs\">\n                    <Tab eventKey=\"palettes\" title={<>< PaletteFill /> Palettes</>}>\n                        <Container className=\"d-flex bg-white border border-top-0\">\n                            {userPalettes.length === 0 ?\n                                <div className=\"text-center w-100 my-5\">\n                                    <h5>You haven't created any palettes yet.</h5>\n                                </div> :\n                                <Container>\n                                    <Row>\n                                        {userPalettes && userPalettes.map(palette => (\n                                            <Col sm={12} md={6} lg={4} key={palette._id} >\n                                                <div className=\"my-3\">\n                                                    <PaletteCard\n                                                        palette={palette}\n                                                        onLiked={fetchLikedPalettes}\n                                                    />\n                                                </div>\n                                            </Col>\n                                        ))}\n                                    </Row>\n                                </Container>\n                            }\n                        </Container>\n                    </Tab>\n                    <Tab eventKey=\"liked\" title={<>< HeartFill /> Liked</>}>\n                        <Container className=\"d-flex bg-white border border-top-0\">\n                            {likedPalettes.length === 0 ?\n                                <div className=\"text-center w-100 my-5\">\n                                    <h5>You haven't liked any palettes yet.</h5>\n                                </div> :\n                                <Container>\n                                    <Row>\n                                        {likedPalettes && likedPalettes.map(palette => (\n                                            <Col sm={12} md={6} lg={4} key={palette._id} >\n                                                <div className=\"my-3\">\n                                                    <PaletteCard\n                                                        palette={palette}\n                                                        onLiked={fetchLikedPalettes}\n                                                    />\n                                                </div>\n                                            </Col>\n                                        ))}\n                                    </Row>\n                                </Container>\n                            }\n                        </Container>\n                    </Tab>\n                </Tabs>\n            </Container>\n        </Container>\n    );\n}\n\nexport default withHeaderFooter(Profile);","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/utils/color.js",["234"],"import tinyColor from 'tinycolor2';\n\nconst isValidHex = (hex) => {\n    if (hex === 'transparent') {\n        return true\n    }\n    // disable hex4\n    const lh = (String(hex).charAt(0) === '#') ? 1 : 0\n    return hex.length !== (4 + lh) && tinyColor(hex).isValid();\n}\n\nconst randomRGBA = () => {\n    return {\n        r: Math.floor(Math.random() * 255),\n        g: Math.floor(Math.random() * 255),\n        b: Math.floor(Math.random() * 255),\n        a: 1,\n    }\n}\n\nconst toRgbString = rgb => {\n    rgb = rgb.a ? rgb : { ...rgb, a: 1 };\n    return `rgba(${rgb.r},${rgb.g},${rgb.b},${rgb.a})`;\n}\n\nexport default {\n    isValidHex,\n    randomRGBA,\n    toRgbString,\n};","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Actions/message.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Reducers/message.js",[],"/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/Components/MessageAlert.jsx",["235"],"import React, { useEffect } from 'react';\nimport Alert from 'react-bootstrap/Alert';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectMessage } from '../Reducers/message';\nimport { clearMessage } from '../Actions/message';\n\nfunction MessageAlert({ autoDismiss = true }) {\n    const { variant, message } = useSelector(selectMessage);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (autoDismiss) {\n            const timer = setTimeout(() => dispatch(clearMessage()), 4000);\n            return () => clearTimeout(timer);\n        }\n    }, [message]);\n\n    return (\n        <div>\n            { variant && \n                <Alert\n                    variant = {variant}\n                    onClose={() => { dispatch(clearMessage()) }}\n                    dismissible\n                >\n                    {message}\n                </Alert>}\n        </div>\n    )\n}\n\nexport default MessageAlert;","/Users/wufeiyi/Documents/Programming/Web Develop/My_Web_Application_ColorPalletes/client/src/device.js",[],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":8,"column":29,"nodeType":"242","messageId":"243","endLine":8,"endColumn":39},{"ruleId":"244","severity":1,"message":"245","line":62,"column":8,"nodeType":"246","endLine":62,"endColumn":21,"suggestions":"247"},{"ruleId":"236","replacedBy":"248"},{"ruleId":"238","replacedBy":"249"},{"ruleId":"240","severity":1,"message":"250","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"251","line":1,"column":27,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"252","line":23,"column":13,"nodeType":"242","messageId":"243","endLine":23,"endColumn":17},{"ruleId":"240","severity":1,"message":"253","line":3,"column":10,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"254","line":3,"column":16,"nodeType":"242","messageId":"243","endLine":3,"endColumn":27},{"ruleId":"240","severity":1,"message":"255","line":58,"column":7,"nodeType":"242","messageId":"243","endLine":58,"endColumn":15},{"ruleId":"240","severity":1,"message":"256","line":66,"column":7,"nodeType":"242","messageId":"243","endLine":66,"endColumn":21},{"ruleId":"240","severity":1,"message":"257","line":72,"column":7,"nodeType":"242","messageId":"243","endLine":72,"endColumn":24},{"ruleId":"258","severity":1,"message":"259","line":114,"column":49,"nodeType":"260","messageId":"261","endLine":114,"endColumn":51},{"ruleId":"240","severity":1,"message":"250","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"262","line":11,"column":22,"nodeType":"242","messageId":"243","endLine":11,"endColumn":30},{"ruleId":"244","severity":1,"message":"263","line":51,"column":8,"nodeType":"246","endLine":51,"endColumn":14,"suggestions":"264"},{"ruleId":"240","severity":1,"message":"265","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},{"ruleId":"236","replacedBy":"266"},{"ruleId":"238","replacedBy":"267"},{"ruleId":"240","severity":1,"message":"250","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"244","severity":1,"message":"268","line":52,"column":8,"nodeType":"246","endLine":52,"endColumn":14,"suggestions":"269"},{"ruleId":"270","severity":1,"message":"271","line":28,"column":1,"nodeType":"272","endLine":33,"endColumn":3},{"ruleId":"240","severity":1,"message":"250","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"251","line":1,"column":27,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"240","severity":1,"message":"273","line":4,"column":8,"nodeType":"242","messageId":"243","endLine":4,"endColumn":13},{"ruleId":"236","replacedBy":"274"},{"ruleId":"238","replacedBy":"275"},{"ruleId":"244","severity":1,"message":"276","line":77,"column":8,"nodeType":"246","endLine":77,"endColumn":14,"suggestions":"277"},{"ruleId":"240","severity":1,"message":"251","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"251","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":26},{"ruleId":"240","severity":1,"message":"278","line":2,"column":10,"nodeType":"242","messageId":"243","endLine":2,"endColumn":23},{"ruleId":"240","severity":1,"message":"279","line":5,"column":18,"nodeType":"242","messageId":"243","endLine":5,"endColumn":35},{"ruleId":"240","severity":1,"message":"280","line":91,"column":11,"nodeType":"242","messageId":"243","endLine":91,"endColumn":19},{"ruleId":"240","severity":1,"message":"281","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":11},{"ruleId":"244","severity":1,"message":"282","line":105,"column":8,"nodeType":"246","endLine":105,"endColumn":10,"suggestions":"283"},{"ruleId":"244","severity":1,"message":"284","line":111,"column":8,"nodeType":"246","endLine":111,"endColumn":23,"suggestions":"285"},{"ruleId":"270","severity":1,"message":"271","line":44,"column":1,"nodeType":"272","endLine":52,"endColumn":3},{"ruleId":"270","severity":1,"message":"271","line":13,"column":1,"nodeType":"272","endLine":16,"endColumn":3},{"ruleId":"270","severity":1,"message":"271","line":21,"column":1,"nodeType":"272","endLine":26,"endColumn":2},{"ruleId":"270","severity":1,"message":"271","line":12,"column":1,"nodeType":"272","endLine":15,"endColumn":2},{"ruleId":"240","severity":1,"message":"281","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":11},{"ruleId":"240","severity":1,"message":"255","line":27,"column":7,"nodeType":"242","messageId":"243","endLine":27,"endColumn":15},{"ruleId":"240","severity":1,"message":"256","line":35,"column":7,"nodeType":"242","messageId":"243","endLine":35,"endColumn":21},{"ruleId":"240","severity":1,"message":"257","line":41,"column":7,"nodeType":"242","messageId":"243","endLine":41,"endColumn":24},{"ruleId":"240","severity":1,"message":"286","line":48,"column":12,"nodeType":"242","messageId":"243","endLine":48,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":85,"column":49,"nodeType":"260","messageId":"261","endLine":85,"endColumn":51},{"ruleId":"240","severity":1,"message":"254","line":3,"column":22,"nodeType":"242","messageId":"243","endLine":3,"endColumn":33},{"ruleId":"240","severity":1,"message":"287","line":10,"column":8,"nodeType":"242","messageId":"243","endLine":10,"endColumn":14},{"ruleId":"240","severity":1,"message":"288","line":11,"column":23,"nodeType":"242","messageId":"243","endLine":11,"endColumn":34},{"ruleId":"244","severity":1,"message":"289","line":40,"column":8,"nodeType":"246","endLine":40,"endColumn":14,"suggestions":"290"},{"ruleId":"270","severity":1,"message":"271","line":26,"column":1,"nodeType":"272","endLine":30,"endColumn":3},{"ruleId":"244","severity":1,"message":"291","line":16,"column":8,"nodeType":"246","endLine":16,"endColumn":17,"suggestions":"292"},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchIsLiked', 'fetchLikes', and 'fetchViews'. Either include them or remove the dependency array.","ArrayExpression",["295"],["293"],["294"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","'useLocation' is defined but never used.","'ColorBox' is assigned a value but never used.","'AddColorButton' is assigned a value but never used.","'DeleteColorButton' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["296"],"'React' is defined but never used.",["293"],["294"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'location.state'. Either include them or remove the dependency array.",["297"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.",["293"],["294"],"React Hook useEffect has missing dependencies: 'fetchIsLiked', 'fetchNumLikes', and 'fetchViews'. Either include them or remove the dependency array.",["298"],"'WindowSidebar' is defined but never used.","'isStyledComponent' is defined but never used.","'myChange' is assigned a value but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchViews'. Either include it or remove the dependency array.",["299"],"React Hook useEffect has missing dependencies: 'fetchIsLiked', 'fetchNumLikes', and 'fetchPalette'. Either include them or remove the dependency array.",["300"],"'palette' is assigned a value but never used.","'styled' is defined but never used.","'useDispatch' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["301"],"React Hook useEffect has missing dependencies: 'autoDismiss' and 'dispatch'. Either include them or remove the dependency array.",["302"],"no-global-assign","no-unsafe-negation",{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [artwork._id, fetchIsLiked, fetchLikes, fetchViews]",{"range":"319","text":"320"},"Update the dependencies array to be: [dispatch, history, user]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, history, location.state, user]",{"range":"323","text":"324"},"Update the dependencies array to be: [fetchIsLiked, fetchNumLikes, fetchViews, user]",{"range":"325","text":"326"},"Update the dependencies array to be: [fetchViews]",{"range":"327","text":"328"},"Update the dependencies array to be: [fetchIsLiked, fetchNumLikes, fetchPalette, isLiked, user]",{"range":"329","text":"330"},"Update the dependencies array to be: [history, user]",{"range":"331","text":"332"},"Update the dependencies array to be: [autoDismiss, dispatch, message]",{"range":"333","text":"334"},[1756,1769],"[artwork._id, fetchIsLiked, fetchLikes, fetchViews]",[1555,1561],"[dispatch, history, user]",[1671,1677],"[dispatch, history, location.state, user]",[2254,2260],"[fetchIsLiked, fetchNumLikes, fetchViews, user]",[3144,3146],"[fetchViews]",[3251,3266],"[fetchIsLiked, fetchNumLikes, fetchPalette, isLiked, user]",[1429,1435],"[history, user]",[580,589],"[autoDismiss, dispatch, message]"]